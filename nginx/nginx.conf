user  www-data;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections  1024;  # Increase if more clients
}

http {
  include       /etc/nginx/mime.types;
  # fallback in case we can't determine a type
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  proxy_buffer_size   128k;
  proxy_buffers   4 256k;
  proxy_busy_buffers_size   256k;
  
  client_max_body_size 1024M;

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  # upstream frontend_upstream {
  #   server frontend:3000;
  # }

  upstream api_upstream {
    server express:8080;
  }

  # server {
  #   listen 80;
  #   charset utf-8;

  #   server_name mean.com;

  #   location / {
  #     try_files $uri @proxy_to_frontend;
  #   }

  #   location @proxy_to_frontend {
  #       proxy_redirect     off;
  #       proxy_set_header   Host $host;
  #       proxy_set_header   X-Real-IP $remote_addr;
  #       proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  #       proxy_set_header   X-Forwarded-Host $server_name;
  #       proxy_set_header   X-Forwarded-Proto $scheme;
  #       proxy_pass http://frontend_upstream;
  #   }
  # }

    server {
    listen 80;
    charset utf-8;

    server_name api.mean.com;

    # Handle noisy favicon.ico messages in nginx
    location = /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

    location / {
      try_files $uri @proxy_to_api;
    }

    location @proxy_to_api {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_pass http://api_upstream;
    }
  }
}